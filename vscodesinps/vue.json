{
  "vbase": {
    "prefix": "vtab // @description",
    "description": "",
    "body": [
      "<template>",
      "  <div>",
      "    <fmbreadcrumb></fmbreadcrumb>",
      "    <a-row type=\"flex\" justify=\"space-between\" align=\"middle\" class=\"top-box\">",
      "      <a-col>",
      "        <h1 class=\"module-tit\">内容管理</h1>",
      "      </a-col>",
      "    </a-row>",
      "    <a-tabs :default-active-key=\"componentName\" @change=\"callback\">",
      "      <a-tab-pane key=\"expertList\" tab=\"专家\"></a-tab-pane>",
      "      <a-tab-pane key=\"eredarList\" tab=\"达人\" force-render></a-tab-pane>",
      "    </a-tabs>",
      "    <components :is=\"componentName\"></components>",
      "  </div>",
      "</template>",
      "",
      "<script>",
      "import fmbreadcrumb from \"@components/breadcrumb/index.vue\";",
      "export default {",
      "  components: {",
      "    fmbreadcrumb,",
      "  },",
      "  data() {",
      "    return {",
      "      componentName: \"expertList\",",
      "    };",
      "  },",
      "  methods: {",
      "    callback(key) {",
      "      this.componentName = key;",
      "    },",
      "  },",
      "};",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>",
      ""
    ]
  },
  "vlist": {
    "prefix": "vlist",
    "description": "",
    "body": [
      "<template>",
      "  <div>",
      "    <a-spin :spinning=\"spinning\">",
      "      <a-form layout=\"inline\" :form=\"form\" @submit=\"handleSearch\" :scroll=\"true\">",
      "        <a-form-item label=\"\">",
      "          <a-input v-decorator=\"['keyWord']\" placeholder=\"圈主\\圈名称\"></a-input>",
      "        </a-form-item>",
      "        <a-form-item label=\"状态：\">",
      "          <a-select",
      "            showSearch",
      "            :filter-option=\"filterOption\"",
      "            v-decorator=\"['status']\"",
      "            placeholder=\"请选择\"",
      "            style=\"width: 180px\"",
      "          >",
      "            <a-select-option value=\"0\">全部</a-select-option>",
      "            <a-select-option v-for=\"(item, key) in []\" :key=\"key\" :value=\"key\">{{ item }}</a-select-option>",
      "          </a-select>",
      "        </a-form-item>",
      "        <a-form-item>",
      "          <a-button type=\"primary\" html-type=\"submit\">查询</a-button>",
      "        </a-form-item>",
      "        <a-form-item>",
      "          <a-button @click=\"handleReset\">清除</a-button>",
      "        </a-form-item>",
      "      </a-form>",
      "      <a-table",
      "        size=\"small\"",
      "        class=\"ant-table\"",
      "        :columns=\"columns\"",
      "        :data-source=\"tableData\"",
      "        :pagination=\"pagination\"",
      "        :scroll=\"{ x: 'max-content' }\"",
      "        :rowKey=\"(record, index) => index\"",
      "      >",
      "        <a-avatar slot=\"img\" slot-scope=\"text\" size=\"large\" :src=\"text\" />",
      "        <a-space slot=\"options\" slot-scope=\"text\">",
      "          <a size=\"small\" @click=\"handleDel(text)\" block>删除</a>",
      "        </a-space>",
      "      </a-table>",
      "    </a-spin>",
      "  </div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "  components: {},",
      "  data() {",
      "    return {",
      "      spinning: false,",
      "      statusList: [],",
      "      form: this.\\$form.createForm(this, {}),",
      "      // table",
      "      tableData: [],",
      "      pagination: {",
      "        current: 1,",
      "        pageSize: 10,",
      "        showTotal: total => `共\\${total}条`,",
      "        onShowSizeChange: pageSize => (this.pageSize = pageSize),",
      "        onChange: this.onPageChange.bind(this),",
      "        total: 0,",
      "        size: \"small\"",
      "      },",
      "      columns: [",
      "        {",
      "          title: \"\",",
      "          dataIndex: \"\"",
      "        },",
      "        {",
      "          title: \"操作\",",
      "          align: \"center\",",
      "          fixed: \"right\",",
      "          scopedSlots: { customRender: \"options\" }",
      "        }",
      "      ]",
      "    };",
      "  },",
      "  mounted() {",
      "    this.getList();",
      "  },",
      "  methods: {",
      "    // form",
      "    filterOption(input, option) {",
      "      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;",
      "    },",
      "    handleSearch(e = \"\", page = 1) {",
      "      e?.preventDefault?.();",
      "      this.form.validateFields((error, values) => {",
      "        values.page = page;",
      "        this.getList(values);",
      "      });",
      "    },",
      "    handleReset() {",
      "      this.form.resetFields();",
      "      this.getList();",
      "    },",
      "    // table",
      "    getList({ page = 1, ...reset } = {}) {",
      "      // getCircleList({ page, ...reset }).then(res => {",
      "      //   this.tableData = res.list;",
      "      //   this.pagination.total = Number(res.count);",
      "      //   this.pagination.current = res.page;",
      "      // });",
      "    },",
      "    onPageChange(page = this.pagination.current) {",
      "      this.onPageChange(\"\",page);",
      "    },",
      "    // options",
      "    handleDel(text) {",
      "      this.\\$confirm({",
      "        title: \"确定删除该**?\",",
      "        content: \"\",",
      "        okText: \"确定\",",
      "        cancelText: \"取消\",",
      "        onOk: () => {},",
      "        onCancel() {",
      "          console.log(\"Cancel\");",
      "        }",
      "      });",
      "    }",
      "  }",
      "};",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      ".ant-table td {",
      "  white-space: nowrap;",
      "}",
      "</style>",
      ""
    ]
  },
  "vmodal": {
    "prefix": "vmodal",
    "description": "",
    "body": [
      "<template>",
      "  <div @click=\"showModal\">",
      "    <slot></slot>",
      "    <a-modal title=\"****\" width=\"60%\" :visible=\"show\" footer=\"\" cancelText=\"关闭\" @cancel=\"handleCancel\"></a-modal>",
      "  </div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "  components: {},",
      "  props: {},",
      "  data() {",
      "    return {",
      "      show: false",
      "    };",
      "  },",
      "  methods: {",
      "    getDetail() {},",
      "    showModal() {",
      "      this.getDetail();",
      "      this.show = true;",
      "    },",
      "    handleCancel(e) {",
      "      this.show = false;",
      "    }",
      "  }",
      "};",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>",
      ""
    ]
  },
  "Vue Single File Component": {
    "prefix": "vbase",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\t${0}",
      "\t}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with SCSS"
  },
  "Vue Single File Component with SASS": {
    "prefix": "vbase-sass",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\t${0}",
      "\t}",
      "</script>",
      "",
      "<style lang=\"sass\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with PostCSS"
  },
  "Vue Single File Component with LESS": {
    "prefix": "vbase-less",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\t${0}",
      "\t}",
      "</script>",
      "",
      "<style lang=\"less\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with PostCSS"
  },
  "Vue Single File Component with postcss": {
    "prefix": "vbase-pcss",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\t${0}",
      "\t}",
      "</script>",
      "",
      "<style lang=\"postcss\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with PostCSS"
  },
  "Vue Single File Component with Css": {
    "prefix": "vbase-css",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\t${0}",
      "\t}",
      "</script>",
      "",
      "<style scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with CSS"
  },
  "Vue Single File Component with Stylus": {
    "prefix": "vbase-styl",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\t${0}",
      "\t}",
      "</script>",
      "",
      "<style lang=\"stylus\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with Stylus"
  },
  "Vue Single File Component with Typescript": {
    "prefix": "vbase-ts",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "\timport Vue from 'vue'",
      "",
      "\texport default Vue.extend({",
      "\t\t${0}",
      "\t})",
      "</script>",
      "",
      "<style scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with Typescript"
  },
  "Vue Single File Component with No Style": {
    "prefix": "vbase-ns",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\t${0}",
      "\t}",
      "</script>"
    ],
    "description": "Base for Vue File with no styles"
  },
  "Vue Single File Component Composition API": {
    "prefix": "vbase-3",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "\tsetup () {",
      "\t\t${0}",
      "",
      "\t\treturn {}",
      "\t}",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File Composition API with SCSS"
  },
  "Vue Single File Component Setup Composition API": {
    "prefix": "vbase-3-setup",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script setup>",
      "",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File Setup Composition API with SCSS"
  },
  "Vue Single File Component Composition API Reactive": {
    "prefix": "vbase-3-reactive",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "import { reactive, toRefs } from 'vue'",
      "",
      "export default {",
      "\tsetup () {",
      "\t\tconst state = reactive({",
      "\t\t\t${0:count}: ${1:0},",
      "\t\t})",
      "\t",
      "\t\treturn {",
      "\t\t\t...toRefs(state),",
      "\t\t}",
      "\t}",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File Composition API with SCSS"
  },
  "Vue Single File Component Composition API with Typescript": {
    "prefix": "vbase-3-ts",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from 'vue'",
      "",
      "export default defineComponent({",
      "\tsetup () {",
      "\t\t${0}\n",
      "\t\treturn {}",
      "\t}",
      "})",
      "</script>",
      "",
      "<style scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File Composition API - Typescript"
  },
  "Vue Single File Component Setup Composition API with Typescript": {
    "prefix": "vbase-3-ts-setup",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script setup lang=\"ts\">",
      "",
      "</script>",
      "",
      "<style scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File Setup Composition API - Typescript"
  },
  "Vue Single File Component with Class based Typescript format": {
    "prefix": "vbase-ts-class",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "\timport { Component, Vue } from 'vue-property-decorator';",
      "",
      "\t@Component",
      "\texport default class ${0} extends Vue {",
      "\t\t",
      "\t}",
      "</script>",
      "",
      "<style scoped>",
      "",
      "</style>"
    ],
    "description": "Base for Vue File with Class based Typescript format"
  }
}
